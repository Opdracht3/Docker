<?xml version='1.0' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.15">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.scm.api.SCMRevisionAction plugin="scm-api@2.2.3">
      <revision class="jenkins.plugins.git.AbstractGitSCMSource$SCMRevisionImpl" plugin="git@3.6.1">
        <head plugin="scm-api@2.2.3">
          <name>master</name>
        </head>
        <hash>dd9f13bd79cea0deecf4f82e841c6e10c353803c</hash>
      </revision>
    </jenkins.scm.api.SCMRevisionAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.9">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@2.41">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
  </actions>
  <queueId>59</queueId>
  <timestamp>1509200061195</timestamp>
  <startTime>1509200061196</startTime>
  <result>FAILURE</result>
  <duration>1579</duration>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>node {
  agent any

  stages {
    stage(&apos;Build&apos;) {
      steps {
        echo &apos;Building..&apos;
        sh(&quot;npm install&quot;)
      }
    }

    stage(&apos;test&apos;) {
      steps {
        echo &apos;Building..&apos;
        sh(&quot;npm build&quot;)
      }
    }

    stage(&apos;Test&apos;) {
      steps {
        sh(&quot;npm test&quot;)
      }
    }

    stage(&apos;Build Docker&apos;) {
      steps {
        echo &apos;Buildin docker.&apos;
        withCredentials([usernamePassword(credentialsId: &apos;docker-repo&apos;, usernameVariable: &apos;USERNAME&apos;, passwordVariable: &apos;PASSWORD&apos;)]) {
          sh(&quot;sudo docker login -u=$USERNAME -p=$PASSWORD&quot;)
          sh(&quot;sudo docker build . --tag husamay/rps-backend:0.1.${BUILD_NUMBER}&quot;)
        }
      }
    }


    stage(&apos;Test image&apos;) {
      /* Ideally, we would run a test framework against our image.
       * For this example, we&apos;re using a Volkswagen-type approach ;-) */

      sh &apos;sudo docker rm demo || true&apos;
      sh &apos;sudo docker run -t --rm --name frontend-container opdracht3/frontend &amp;&apos;
      sh &apos;sleep 5s&apos;
      sh &apos;sudo docker exec -t frontend-container bash -c \&apos;ls -l\&apos;&apos;
      sh &apos;sudo docker stop frontend-container&apos;

    }


    stage(&apos;Deploy Docker&apos;) {
      steps {
        echo &apos;Deploying 0.1.${BUILD_NUMBER} to repo....&apos;
        sh(&quot;sudo docker push husamay/rps-backend:0.1.${BUILD_NUMBER}&quot;)
        echo &apos;Deploying latest tag to repo....&apos;
        sh(&quot;sudo docker push husamay/rps-backend&quot;)
      }
    }
  }
}
</script>
    <loadedScripts class="map"/>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>12349269</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>499017595</long>
      </entry>
      <entry>
        <string>run</string>
        <long>36045648</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>276720672</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>3275208</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>7</iota>
    <head>1:7</head>
  </execution>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>